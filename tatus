[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 53a5683..fdfec09 100644[m
Binary files a/.gitignore and b/.gitignore differ
[1mdiff --git a/config/settings.py b/config/settings.py[m
[1mindex e90d7ee..015270f 100644[m
[1m--- a/config/settings.py[m
[1m+++ b/config/settings.py[m
[36m@@ -11,15 +11,9 @@[m [mGenerado con compatibilidad para:[m
 from pathlib import Path[m
 import os[m
 from dotenv import load_dotenv[m
[31m-import os[m
[31m-[m
[31m-# Load environment variables from .env file[m
[31m-load_dotenv()[m
[31m-[m
[31m-from django.conf.global_settings import TEMPLATES[m
 import dj_database_url[m
 [m
[31m-# Cargar variables .env[m
[32m+[m[32m# Load environment variables from .env file[m
 load_dotenv()[m
 [m
 # --Paths[m
[36m@@ -150,20 +144,6 @@[m [mCLOUDINARY_CLOUD_NAME = os.getenv('CLOUDINARY_CLOUD_NAME')[m
 CLOUDINARY_API_KEY = os.getenv('CLOUDINARY_API_KEY')[m
 CLOUDINARY_API_SECRET = os.getenv('CLOUDINARY_API_SECRET')[m
 [m
[31m-# Configuraci√≥n de almacenamiento[m
[31m-if CLOUDINARY_CLOUD_NAME and CLOUDINARY_API_KEY and CLOUDINARY_API_SECRET:[m
[31m-    STORAGES = {[m
[31m-        'default': {[m
[31m-            'BACKEND': 'cloudinary_storage.storage.MediaCloudinaryStorage'[m
[31m-        },[m
[31m-        'staticfiles': {[m
[31m-            'BACKEND': 'django.contrib.staticfiles.storage.StaticFilesStorage'[m
[31m-        }[m
[31m-    }[m
[31m-    print("Using Cloudinary for image storage")[m
[31m-else:[m
[31m-    raise Exception("Cloudinary no configurado. Debes definir CLOUDINARY_CLOUD_NAME, CLOUDINARY_API_KEY y CLOUDINARY_API_SECRET en las variables de entorno.")[m
[31m-[m
 # --- Verificaci√≥n de correo electr√≥nico[m
 # Tiempo que el c√≥digo es v√°lido (en minutos)[m
 VERIFICATION_WINDOW_MINUTES = int(os.getenv("VERIFICATION_WINDOW_MINUTES", "15"))[m
[36m@@ -195,7 +175,6 @@[m [mEMAIL_BACKEND = ([m
 LOGIN_URL = 'login'[m
 LOGIN_REDIRECT_URL = 'core:privada'[m
 LOGOUT_REDIRECT_URL = 'core:home'[m
[31m-LOGOUT_REDIRECT_URL = 'core:home'[m
 [m
 # Cloudinary Configuration[m
 CLOUDINARY_STORAGE = {[m
[36m@@ -205,7 +184,7 @@[m [mCLOUDINARY_STORAGE = {[m
 }[m
 [m
 # Configuraci√≥n de almacenamiento[m
[31m-if os.getenv('CLOUDINARY_CLOUD_NAME') and os.getenv('CLOUDINARY_API_KEY') and os.getenv('CLOUDINARY_API_SECRET'):[m
[32m+[m[32mif CLOUDINARY_CLOUD_NAME and CLOUDINARY_API_KEY and CLOUDINARY_API_SECRET:[m
     # Usar Cloudinary si las credenciales est√°n disponibles[m
     STORAGES = {[m
         'default': {[m
[36m@@ -230,18 +209,59 @@[m [melse:[m
 [m
 # code needed to deploy in Render.com:[m
 if 'RENDER' in os.environ:[m
[32m+[m[32m    # Validaci√≥n de variables de entorno cr√≠ticas[m
[32m+[m[32m    RENDER_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')[m
     print("Using Render.com settings")[m
     DEBUG = False[m
[31m-    ALLOWED_HOSTS = [os.environ.get('RENDER_EXTERNAL_HOSTNAME')][m
[31m-    DATABASES = {'default': dj_database_url.config(conn_max_age=600)}[m
[32m+[m[32m    if not RENDER_HOSTNAME:[m
[32m+[m[32m        print("RENDER_EXTERNAL_HOSTNAME no est√° definido. Usando 'comedorescomunitarios.onrender.com' como fallback.")[m
[32m+[m[32m        ALLOWED_HOSTS = ["comedorescomunitarios.onrender.com"][m
[32m+[m[32m    else:[m
[32m+[m[32m        ALLOWED_HOSTS = [RENDER_HOSTNAME][m
[32m+[m[32m    if not os.environ.get('DATABASE_URL'):[m
[32m+[m[32m        print("DATABASE_URL no est√° definido. Usando SQLite por defecto.")[m
[32m+[m[32m    else:[m
[32m+[m[32m        DATABASES = {'default': dj_database_url.config(conn_max_age=600)}[m
     MIDDLEWARE.insert(MIDDLEWARE.index('django.middleware.security.SecurityMiddleware') + 1,[m
                       'whitenoise.middleware.WhiteNoiseMiddleware')[m
     MEDIA_URL= "/media/"[m
[31m-    STORAGES = {[m
[31m-        "default":[m
[31m-                {"BACKEND": "cloudinary_storage.storage.MediaCloudinaryStorage"},[m
[31m-        "staticfiles":[m
[31m-                {"BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage"},[m
[31m-    }[m
[31m-    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')[m
[31m-    print("Render configuration activated")[m
\ No newline at end of file[m
[32m+[m[32m    # Cloudinary obligatorio en producci√≥n[m
[32m+[m[32m    if os.getenv('CLOUDINARY_CLOUD_NAME') and os.getenv('CLOUDINARY_API_KEY') and os.getenv('CLOUDINARY_API_SECRET'):[m
[32m+[m[32m        STORAGES = {[m
[32m+[m[32m            "default": {"BACKEND": "cloudinary_storage.storage.MediaCloudinaryStorage"},[m
[32m+[m[32m            "staticfiles": {"BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage"},[m
[32m+[m[32m        }[m
[32m+[m[32m        print("Cloudinary activado para almacenamiento de im√°genes")[m
[32m+[m[32m    else:[m
[32m+[m[32m        raise Exception("Cloudinary no configurado. Debes definir CLOUDINARY_CLOUD_NAME, CLOUDINARY_API_KEY y CLOUDINARY_API_SECRET en las variables de entorno.")[m
[32m+[m[32m    STATIC_ROOT = BASE_DIR / 'staticfiles'[m
[32m+[m[32m    print(f"ALLOWED_HOSTS: {ALLOWED_HOSTS}")[m
[32m+[m[32m    print(f"DATABASES: {DATABASES}")[m
[32m+[m[32m    print(f"STORAGES: {STORAGES}")[m
[32m+[m
[32m+[m[32m# Configuraci√≥n b√°sica de logging para producci√≥n[m
[32m+[m[32mLOGGING = {[m
[32m+[m[32m    'version': 1,[m
[32m+[m[32m    'disable_existing_loggers': False,[m
[32m+[m[32m    'handlers': {[m
[32m+[m[32m        'console': {[m
[32m+[m[32m            'class': 'logging.StreamHandler',[m
[32m+[m[32m        },[m
[32m+[m[32m    },[m
[32m+[m[32m    'root': {[m
[32m+[m[32m        'handlers': ['console'],[m
[32m+[m[32m        'level': 'INFO',[m
[32m+[m[32m    },[m
[32m+[m[32m    'loggers': {[m
[32m+[m[32m        'django': {[m
[32m+[m[32m            'handlers': ['console'],[m
[32m+[m[32m            'level': 'INFO',[m
[32m+[m[32m            'propagate': True,[m
[32m+[m[32m        },[m
[32m+[m[32m        'core': {[m
[32m+[m[32m            'handlers': ['console'],[m
[32m+[m[32m            'level': 'INFO',[m
[32m+[m[32m            'propagate': True,[m
[32m+[m[32m        },[m
[32m+[m[32m    },[m
[32m+[m[32m}[m
[1mdiff --git a/config/urls.py b/config/urls.py[m
[1mindex 3796478..45fbdfa 100644[m
[1m--- a/config/urls.py[m
[1m+++ b/config/urls.py[m
[36m@@ -45,5 +45,3 @@[m [mif settings.DEBUG:[m
     # Tambi√©n servir desde STATICFILES_DIRS[m
     from django.contrib.staticfiles.urls import staticfiles_urlpatterns[m
     urlpatterns += staticfiles_urlpatterns()[m
[31m-[m
[31m-[m
[1mdiff --git a/core/forms.py b/core/forms.py[m
[1mindex 8c89471..44cd943 100644[m
[1m--- a/core/forms.py[m
[1m+++ b/core/forms.py[m
[36m@@ -5,6 +5,9 @@[m [mfrom django.core.exceptions import ValidationError[m
 from .models import Comedor[m
 [m
 class ComedorForm(forms.ModelForm):[m
[32m+[m[32m    """[m
[32m+[m[32m    Formulario para crear y editar comedores[m
[32m+[m[32m    """[m
     class Meta:[m
         model = Comedor[m
         fields = ['nombre', 'descripcion', 'imagen', 'barrio', 'tipo', 'capacidad'][m
[36m@@ -72,7 +75,6 @@[m [mclass CustomUserCreationForm(UserCreationForm):[m
                     'class': 'form-control',[m
                     'placeholder': 'Contrase√±a'[m
                 })[m
[31m-[m
         from django.utils.safestring import mark_safe[m
         self.fields['password1'].help_text = mark_safe('''[m
             <ul class="password-help-list">[m
[1mdiff --git a/core/models.py b/core/models.py[m
[1mindex 23b8ef6..d53c608 100644[m
[1m--- a/core/models.py[m
[1m+++ b/core/models.py[m
[36m@@ -1,12 +1,8 @@[m
 # models.py[m
[31m-from django.contrib.auth.models import AbstractUser[m
 from django.contrib.auth.models import User[m
 from django.db import models[m
 from django.utils import timezone[m
[31m-from django.contrib.auth.models import User[m
 from datetime import timedelta[m
[31m-[m
[31m-import uuid[m
 import secrets[m
 [m
 class Comedor(models.Model):[m
[36m@@ -52,4 +48,3 @@[m [mclass UserProfile(models.Model):[m
         if timezone.now() > self.verification_expires_at:[m
             return False[m
         return secrets.compare_digest(code, self.email_verification_code)[m
[31m-[m
[1mdiff --git a/core/utils.py b/core/utils.py[m
[1mindex f6ad9d6..b2277a0 100644[m
[1m--- a/core/utils.py[m
[1m+++ b/core/utils.py[m
[36m@@ -4,6 +4,7 @@[m [mimport time[m
 [m
 from django.core.mail import send_mail[m
 from django.core.cache import cache[m
[32m+[m[32mfrom django.utils import timezone[m
 from django.conf import settings[m
 [m
 EMAIL_SUBJECT_VERIFICATION = "Comedores Comunitarios ‚Äì Verificaci√≥n de correo electr√≥nico"[m
[1mdiff --git a/core/views.py b/core/views.py[m
[1mindex 6af58ea..4109da2 100644[m
[1m--- a/core/views.py[m
[1m+++ b/core/views.py[m
[36m@@ -25,13 +25,21 @@[m [mMAX_TRIES  = getattr(settings, "VERIFICATION_MAX_TRIES", 3)[m
 logger = logging.getLogger(__name__)[m
 [m
 def home(request):[m
[31m-    comedores_count = Comedor.objects.count()[m
[31m-    total_capacity = Comedor.objects.aggregate(total=models.Sum('capacidad'))['total'] or 0[m
[31m-    barrios_count = Comedor.objects.values('barrio').distinct().count()[m
[31m-    tipos_count = Comedor.objects.values('tipo').distinct().count()[m
[31m-    comedores_recientes = Comedor.objects.all().order_by('-id')[:6][m
[31m-[m
[31m-[m
[32m+[m[32m    logger.info('Entrando a la vista home')[m
[32m+[m[32m    try:[m
[32m+[m[32m        comedores_count = Comedor.objects.count()[m
[32m+[m[32m        total_capacity = Comedor.objects.aggregate(total=models.Sum('capacidad'))['total'] or 0[m
[32m+[m[32m        barrios_count = Comedor.objects.values('barrio').distinct().count()[m
[32m+[m[32m        tipos_count = Comedor.objects.values('tipo').distinct().count()[m
[32m+[m[32m        comedores_recientes = Comedor.objects.all().order_by('-id')[:6][m
[32m+[m[32m        logger.info(f"Comedores: {comedores_count}, Capacidad: {total_capacity}")[m
[32m+[m[32m    except Exception as e:[m
[32m+[m[32m        logger.error(f"Error en vista home: {e}")[m
[32m+[m[32m        comedores_count = 0[m
[32m+[m[32m        total_capacity = 0[m
[32m+[m[32m        barrios_count = 0[m
[32m+[m[32m        tipos_count = 0[m
[32m+[m[32m        comedores_recientes = [][m
     context = {[m
         'comedores_count': comedores_count,[m
         'total_capacity': total_capacity,[m
[36m@@ -39,6 +47,7 @@[m [mdef home(request):[m
         'tipos_count': tipos_count,[m
         'comedores_recientes': comedores_recientes,[m
     }[m
[32m+[m[32m    logger.info('Renderizando template core/home.html')[m
     return render(request, 'core/home.html', context)[m
 [m
 @login_required[m
[36m@@ -51,7 +60,6 @@[m [mdef privada(request):[m
     barrios_count = Comedor.objects.values('barrio').distinct().count()[m
     tipos_count = Comedor.objects.values('tipo').distinct().count()[m
     comedores_recientes = Comedor.objects.all().order_by('-id')[:6][m
[31m-[m
     context = {[m
         'comedores_count': comedores_count,[m
         'total_capacity': total_capacity,[m
[36m@@ -61,7 +69,6 @@[m [mdef privada(request):[m
     }[m
     return render(request, 'core/privada.html', context)[m
 [m
[31m-[m
 def registro(request):[m
     """[m
         Registro con solo dos casos:[m
[36m@@ -130,7 +137,6 @@[m [mdef registro(request):[m
         form = CustomUserCreationForm()[m
 [m
     return render(request, 'registration/registro.html', {'form': form, 'next': next_url})[m
[31m-[m
 def activate_account(request, token):[m
     """[m
     Activar cuenta de usuario mediante token de email[m
[36m@@ -150,6 +156,55 @@[m [mdef activate_account(request, token):[m
 [m
     return redirect('login')[m
 [m
[32m+[m[32m# Vista para crear comedor[m
[32m+[m[32m@login_required[m
[32m+[m[32mdef crear_comedor(request):[m
[32m+[m[32m    if request.method == 'POST':[m
[32m+[m[32m        form = ComedorForm(request.POST, request.FILES)[m
[32m+[m[32m        if form.is_valid():[m
[32m+[m[32m            comedor = form.save()[m
[32m+[m
[32m+[m[32m            messages.success(request, f"¬°Comedor '{comedor.nombre}' creado exitosamente! Ya est√° disponible para la comunidad.")[m
[32m+[m[32m            return redirect('core:listar_comedores')[m
[32m+[m[32m        else:[m
[32m+[m[32m            messages.error(request, "Por favor, revis√° los datos del formulario y correg√≠ los errores marcados.")[m
[32m+[m[32m    else:[m
[32m+[m[32m        form = ComedorForm()[m
[32m+[m[32m    return render(request, 'core/crear_comedor.html', {'form': form})[m
[32m+[m
[32m+[m[32m# Vista para listar comedores con filtros[m
[32m+[m[32mdef listar_comedores(request):[m
[32m+[m[32m    barrio = request.GET.get('barrio', '')[m
[32m+[m[32m    tipo = request.GET.get('tipo', '')[m
[32m+[m[32m    capacidad = request.GET.get('capacidad', '')[m
[32m+[m[32m    comedores = Comedor.objects.all()[m
[32m+[m[32m    if barrio:[m
[32m+[m[32m        comedores = comedores.filter(barrio__icontains=barrio)[m
[32m+[m[32m    if tipo:[m
[32m+[m[32m        comedores = comedores.filter(tipo__icontains=tipo)[m
[32m+[m[32m    if capacidad:[m
[32m+[m[32m        try:[m
[32m+[m[32m            comedores = comedores.filter(capacidad__gte=int(capacidad))[m
[32m+[m[32m        except ValueError:[m
[32m+[m[32m            pass[m
[32m+[m[32m    return render(request, 'core/listar_comedores.html', {[m
[32m+[m[32m        'comedores': comedores,[m
[32m+[m[32m        'barrio': barrio,[m
[32m+[m[32m        'tipo': tipo,[m
[32m+[m[32m        'capacidad': capacidad[m
[32m+[m[32m    })[m
[32m+[m
[32m+[m[32m# Vista para detalle de comedor[m
[32m+[m[32mdef detalle_comedor(request, pk):[m
[32m+[m[32m    comedor = get_object_or_404(Comedor, pk=pk)[m
[32m+[m
[32m+[m[32m    # Log de visualizaci√≥n[m
[32m+[m[32m    if comedor.imagen:[m
[32m+[m[32m        print(f"Viewing comedor: {comedor.nombre} - Image: {comedor.imagen.url}")[m
[32m+[m
[32m+[m[32m    return render(request, 'core/detalle_comedor.html', {'comedor': comedor})[m
[32m+[m
[32m+[m
 def custom_login(request):[m
     """[m
     Vista personalizada de login[m
[36m@@ -222,46 +277,6 @@[m [mdef custom_login(request):[m
 [m
     return render(request, 'registration/login.html', {'form': form})[m
 [m
[31m-@login_required[m
[31m-def crear_comedor(request):[m
[31m-    if request.method == 'POST':[m
[31m-        form = ComedorForm(request.POST, request.FILES)[m
[31m-        if form.is_valid():[m
[31m-            comedor = form.save()[m
[31m-            messages.success(request, f"¬°Comedor '{comedor.nombre}' creado exitosamente! Ya est√° disponible para la comunidad.")[m
[31m-            return redirect('core:listar_comedores')[m
[31m-        else:[m
[31m-            messages.error(request, "Por favor, revis√° los datos del formulario y correg√≠ los errores marcados.")[m
[31m-    else:[m
[31m-        form = ComedorForm()[m
[31m-    return render(request, 'core/crear_comedor.html', {'form': form})[m
[31m-[m
[31m-def listar_comedores(request):[m
[31m-    barrio = request.GET.get('barrio', '')[m
[31m-    tipo = request.GET.get('tipo', '')[m
[31m-    capacidad = request.GET.get('capacidad', '')[m
[31m-    comedores = Comedor.objects.all()[m
[31m-    if barrio:[m
[31m-        comedores = comedores.filter(barrio__icontains=barrio)[m
[31m-    if tipo:[m
[31m-        comedores = comedores.filter(tipo__icontains=tipo)[m
[31m-    if capacidad:[m
[31m-        try:[m
[31m-            comedores = comedores.filter(capacidad__gte=int(capacidad))[m
[31m-        except ValueError:[m
[31m-            pass[m
[31m-    return render(request, 'core/listar_comedores.html', {[m
[31m-        'comedores': comedores,[m
[31m-        'barrio': barrio,[m
[31m-        'tipo': tipo,[m
[31m-        'capacidad': capacidad[m
[31m-    })[m
[31m-[m
[31m-def detalle_comedor(request, pk):[m
[31m-    comedor = get_object_or_404(Comedor, pk=pk)[m
[31m-[m
[31m-    return render(request, 'core/detalle_comedor.html', {'comedor': comedor})[m
[31m-[m
 def verificar_email(request):[m
     if request.method == "POST":[m
         email = ([m
[1mdiff --git a/db.sqlite3 b/db.sqlite3[m
[1mindex 30dda98..81a299e 100644[m
Binary files a/db.sqlite3 and b/db.sqlite3 differ
[1mdiff --git a/static/js/main.js b/static/js/main.js[m
[1mindex f14c8e9..b79a5fd 100644[m
[1m--- a/static/js/main.js[m
[1m+++ b/static/js/main.js[m
[36m@@ -1,2 +1,12 @@[m
[32m+[m[32m// Archivo principal que importa todos los m√≥dulos JavaScript[m
[32m+[m[32m// Este archivo se carga en base.html y activa todas las funcionalidades[m
[32m+[m
[32m+[m[32m// Importar m√≥dulos cuando se cargue la p√°gina[m
 document.addEventListener('DOMContentLoaded', () => {[m
[32m+[m[32m    console.log('üöÄ M√≥dulos JavaScript cargados correctamente');[m
[32m+[m[41m    [m
[32m+[m[32m    // Los m√≥dulos individuales se ejecutan autom√°ticamente[m
[32m+[m[32m    // - counters.js: Contadores animados[m
[32m+[m[32m    // - darkMode.js: Toggle de modo oscuro[m[41m  [m
[32m+[m[32m    // - mobileMenu.js: Mejoras del men√∫ m√≥vil[m
 });[m
[1mdiff --git a/templates/core/base.html b/templates/core/base.html[m
[1mindex eb03653..6d7e81e 100644[m
[1m--- a/templates/core/base.html[m
[1m+++ b/templates/core/base.html[m
[36m@@ -12,6 +12,7 @@[m
     [m
     <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">[m
     [m
[32m+[m[32m    <!-- Custom CSS - Cargado ANTES de los estilos inline -->[m
     <link rel="stylesheet" href="{% static 'css/custom.css' %}">[m
     [m
     <style>[m
[36m@@ -243,6 +244,7 @@[m
                             <i class="fas fa-home me-1"></i>Inicio[m
                         </a>[m
                     </li>[m
[32m+[m[32m                    <!-- Toggle de modo oscuro -->[m
                     <li class="nav-item me-3">[m
                         <button id="darkModeToggle" class="btn btn-outline-light btn-sm" style="border-radius: 20px; padding: 8px 16px; transition: all 0.3s ease;" onmouseover="this.style.background='rgba(255,255,255,0.1)'" onmouseout="this.style.background='transparent'">[m
                             <i class="fas fa-moon me-1"></i>Modo oscuro[m
[36m@@ -323,6 +325,7 @@[m
         {% block content %}{% endblock %}[m
     </main>[m
 [m
[32m+[m[32m    <!-- Footer -->[m
     <footer class="footer mt-5" style="background: linear-gradient(135deg, #2C3E50, #34495E); color: white; padding: 3rem 0; margin-top: 0; border-top: 4px solid #FF6B35; min-height: 120px; display: flex; align-items: center;">[m
         <div class="container" style="display: flex; align-items: center;">[m
             <div class="row" style="width: 100%; align-items: center;">[m
[36m@@ -331,6 +334,7 @@[m
                     <p class="mb-0" style="color: white; font-size: 0.9rem; opacity: 0.9;">Conectando comunidades a trav√©s de la solidaridad y el apoyo mutuo.</p>[m
                 </div>[m
                 [m
[32m+[m[32m                <!-- Newsletter Signup -->[m
                 <div class="col-md-4">[m
                     <h6 style="color: white; margin-bottom: 1rem; font-weight: 600;">Suscribite a nuestro bolet√≠n</h6>[m
                     <form class="d-flex" style="max-width: 300px;">[m
[36m@@ -351,6 +355,7 @@[m
 [m
     <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>[m
     [m
[32m+[m[32m    <!-- Custom JS -->[m
     <script src="{% static 'js/custom.js' %}"></script>[m
     <script src="{% static 'js/stats.js' %}"></script>[m
     <script src="{% static 'js/darkMode.js' %}"></script>[m
[1mdiff --git a/templates/core/listar_comedores.html b/templates/core/listar_comedores.html[m
[1mindex 052dc71..2f1c488 100644[m
[1m--- a/templates/core/listar_comedores.html